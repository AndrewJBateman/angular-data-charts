{"version":3,"sources":["./src/app/modules/common/shared/shared.module.ts","./src/app/modules/common/about/pages.ts","./src/app/pipes/date-convert.pipe.ts","./src/environments/environment.ts","./src/app/modules/application/covid-news/covid-news.component.ts","./src/app/modules/application/covid-news/covid-news.component.html","./src/app/modules/common/contact/contact.component.ts","./src/app/modules/common/contact/contact.component.html","./src/app/services/localstorage.service.ts","./src/app/modules/application/covid-countries/covid-countries.component.ts","./src/app/modules/application/covid-countries/covid-countries.component.html","./src/app/modules/common/nav/nav.component.ts","./src/app/modules/common/nav/nav.component.html","./src/app/modules/common/home/home.component.ts","./src/app/modules/common/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/common/home/home-card/home-card.component.ts","./src/app/modules/common/home/home-card/home-card.component.html","./src/app/modules/common/about/about.component.ts","./src/app/modules/common/about/about.component.html","./src/app/app.module.ts","./src/app/modules/common/pagenotfound/pagenotfound.component.ts","./src/app/modules/common/pagenotfound/pagenotfound.component.html","./src/app/services/github.service.ts","./src/app/pipes/pipes.module.ts","./src/app/modules/application/charts/charts.component.ts","./src/app/modules/application/charts/charts.component.html","./src/app/modules/application/covid-news/news-detail/news-detail.component.ts","./src/app/modules/application/covid-news/news-detail/news-detail.component.html","./src/app/services/covid-data.service.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/services/location.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../../../material.module';\r\nimport { PipesModule } from '../../../pipes/pipes.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [CommonModule, MaterialModule, PipesModule],\r\n})\r\nexport class SharedModule {}\r\n","import { Page } from './page.module';\r\n\r\nexport const PAGES: Page[] = [\r\n  {\r\n    title: 'App',\r\n    icon: 'devices',\r\n    content: 'This app was built in Angular v10 with Angular Material Design components/icons. There is a top menu for desktop/tablet screens and a burger icon-activated side menu for phone screens. The RxJS reactive programming library is used to handle datastreams and propagation of change using observables',\r\n    website1: 'Angular',\r\n    link1: 'https://angular.io/',\r\n    website2: 'Angular Material',\r\n    link2: 'https://material.angular.io/'\r\n  },\r\n  {\r\n    title: 'Home',\r\n    icon: 'home',\r\n    content: 'Global data for Covid-19 cases is fetched from a coronatracker API, set in local storage then displayed on a Mat-card. The Apapi API is used to determine the user country and Covid-19 cases are also shown from that country. Global Covid-19 cases are shown on a chart using the angular-google-charts module',\r\n    website1: 'coronatracker API',\r\n    link1: 'https://api.coronatracker.com',\r\n    website2: 'Apapi API',\r\n    link2: 'https://ipapi.co/'\r\n  },\r\n  {\r\n    title: 'Country List',\r\n    icon: 'language',\r\n    content: `Covid data is fetched from local storage and displayed using a Mat-Table of countries. Flags are obtained from the Countryflags API. The numbers from the Covid data are formatted using the Angular number pipe`,\r\n    website1: 'Countryflags API',\r\n    link1: 'https://www.countryflags.io',\r\n    website2: 'Angular number pipe',\r\n    link2: 'https://angular.io/api/common/DecimalPipe#description'\r\n  },\r\n  {\r\n    title: 'News',\r\n    icon: 'article',\r\n    content: `Covid news data is shown on Mat-cards. The Day.js npm module is used to convert the UTC format date into '... ago'. Clicking on a news card will route the user to a news detail page with the JSON data passed using angular router navigation extras.`,\r\n    website1: 'day.js npm module',\r\n    link1: 'https://www.npmjs.com/package/dayjs',\r\n    website2: 'Angular nav extras',\r\n    link2: 'https://angular.io/api/router/NavigationExtras'\r\n  },\r\n  {\r\n    title: 'Charts',\r\n    icon: 'analytics',\r\n    content: `Global Covid case data is displayed by country using the Angular-Google-Charts npm module with thresholds set to limit the data to make the charts more readable. A radio button group allows the user to choose which class of data is displayed; confirmed, recovered or dead`,\r\n    website1: 'Angular Google Charts',\r\n    link1: 'https://www.npmjs.com/package/angular-google-charts'\r\n  }\r\n];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as dayjs from 'dayjs';\r\nimport * as relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\ndayjs.extend(relativeTime);\r\n\r\n// convert ISO8601 UTC string to '...time ago'\r\n@Pipe({\r\n  name: 'dateConvert',\r\n})\r\nexport class DateConvertPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return dayjs(value).fromNow();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  application: {\r\n    name: \"Covid API\",\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\n\r\nimport { CovidDataService } from '../../../services/covid-data.service';\r\nimport { NewsItems, NewsItem } from '../../../models/covid';\r\nimport { StorageService } from '../../../services/localstorage.service';\r\n\r\n@Component({\r\n  selector: 'app-covid-news',\r\n  templateUrl: './covid-news.component.html',\r\n  styleUrls: ['./covid-news.component.css'],\r\n})\r\nexport class CovidNewsComponent implements OnInit {\r\n  date = '';\r\n  newsTotalItems = 0;\r\n  newsItems: NewsItem[];\r\n\r\n  constructor(\r\n    private covidDataService: CovidDataService,\r\n    private router: Router,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getCovidNews();\r\n  }\r\n\r\n  // subscribe to news API data observable\r\n  getCovidNews(): void {\r\n    this.covidDataService.getCovidNews().subscribe((data: NewsItems) => {\r\n      this.storageService.set(\"totalNewsItems\", data.total);\r\n      this.storageService.set(\"storedNewsItems\", data.items);\r\n      this.newsItems = this.storageService.get(\"storedNewsItems\");\r\n    });\r\n  }\r\n\r\n  onGoToNewsDetail(item: NewsItem): void {\r\n    const navigationExtras: NavigationExtras = {\r\n      state: {\r\n        item,\r\n      },\r\n    };\r\n    this.router.navigate(['/news-detail'], navigationExtras);\r\n  }\r\n}\r\n","<head>\r\n  <meta name=\"description\" content=\"Coronavirus related news card\" />\r\n</head>\r\n\r\n<div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n  <div\r\n    fxLayoutAlign=\"space-evenly stretch\"\r\n    fxFlex=\"25%\"\r\n    fxFlex.xs=\"100%\"\r\n    fxFlex.sm=\"50%\"\r\n    fxFlex.md=\"33%\"\r\n    *ngFor=\"let item of newsItems; index as articleId\"\r\n  >\r\n    <mat-card\r\n      class=\"mat-elevation-z4 mat-card\"\r\n      (click)=\"onGoToNewsDetail(item)\"\r\n      aria-label=\"navigate to article detail\"\r\n    >\r\n      <img\r\n        mat-card-image\r\n        [src]=\"item.urlToImage\"\r\n        [alt]=\"item.title\"\r\n        class=\"card-image\"\r\n      />\r\n      <mat-card-content class=\"card-content\">\r\n        <p class=\"title-style\">{{ item.title }}</p>\r\n        <p class=\"content-style\">{{ item.content | slice: 0:100 }}...</p>\r\n      </mat-card-content>\r\n      <mat-card-footer>\r\n        <mat-icon class=\"date-icon\" color=\"accent\">history</mat-icon>\r\n        {{ item.publishedAt | dateConvert }}\r\n        <div fxFlex></div>\r\n        <mat-icon class=\"source-icon\" color=\"accent\">event_note</mat-icon\r\n        >{{ item.siteName }}\r\n      </mat-card-footer>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GithubService } from '../../../services/github.service';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css'],\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  user: any;\r\n\r\n  constructor(private githubService: GithubService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.githubService.getUser('andrewjbateman').subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n}\r\n","<head>\r\n  <meta name=\"description\" content=\"Shows contact details of author\" />\r\n</head>\r\n\r\n<div class=\"main-container\">\r\n  <h2 class=\"page-header\" fxHide.lt-md>\r\n    <mat-icon class=\"page-header-icon\">contact_mail</mat-icon>Author\r\n    Github/Contact\r\n  </h2>\r\n  <mat-card class=\"contact-card mat-elevation-z4\" *ngIf=\"user\">\r\n    <mat-card-header class=\"card-header\">\r\n      <div\r\n        mat-card-avatar\r\n        class=\"card-header-image\"\r\n        alt=\"Github user profile photo\"\r\n      ></div>\r\n      <mat-card-title\r\n        ><mat-icon class=\"card-header-icon\" color=\"accent\">person_pin</mat-icon\r\n        >{{ user.name }}</mat-card-title\r\n      >\r\n      <mat-card-subtitle\r\n        ><h4 class=\"card-subtitle\">\r\n          <mat-icon class=\"card-header-icon\" color=\"accent\">explore</mat-icon\r\n          >{{ user.location }}\r\n        </h4></mat-card-subtitle\r\n      >\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>\r\n        <mat-icon class=\"card-content-icon\" color=\"accent\">person_pin</mat-icon\r\n        ><span class=\"card-text-bold\">Bio:</span>{{ user.bio }}\r\n      </p>\r\n      <p>\r\n        <mat-icon class=\"card-content-icon\" color=\"accent\">source</mat-icon\r\n        ><span class=\"card-text-bold\">Github repositories:</span\r\n        >{{ user.public_repos }}\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <a\r\n        class=\"card-footer-button\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        href=\"https://github.com/AndrewJBateman\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        aria-label=\"Link to author Github\"\r\n        ><mat-icon class=\"card-footer-icon\">link</mat-icon>Github\r\n      </a>\r\n      <div fxFlex></div>\r\n      <a\r\n        class=\"card-footer-button\"\r\n        mat-raised-button\r\n        color=\"accent\"\r\n        href=\"https://andrewbateman.org/contact\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        aria-label=\"Link to author website contact page\"\r\n        ><mat-icon class=\"card-footer-icon\">send</mat-icon>Contact\r\n      </a>\r\n      <div fxFlex></div>\r\n      <a\r\n        class=\"card-footer-button\"\r\n        mat-raised-button\r\n        color=\"warn\"\r\n        href=\"https://andrewbateman.org\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        aria-label=\"Link to author website\"\r\n        ><mat-icon class=\"card-footer-icon\">account_circle</mat-icon>My Site\r\n      </a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable, Inject } from \"@angular/core\";\n\n@Injectable()\nexport class StorageService {\n  constructor() {}\n\n  set(key: string, data: any): void {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(data));\n    } catch (err) {\n      console.error(\"Error saving to localStorage\", err);\n    }\n  }\n\n  get(key: string) {\n    try {\n      return JSON.parse(sessionStorage.getItem(key));\n    } catch (err) {\n      console.error(\"Error getting data from localStorage\", err);\n      return null;\n    }\n  }\n\n  clear(): void {\n    sessionStorage.clear();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { CountriesCount } from '../../../models/covid';\r\nimport { CovidDataService } from '../../../services/covid-data.service';\r\nimport { StorageService } from '../../../services/localstorage.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-covid-countries',\r\n  templateUrl: './covid-countries.component.html',\r\n  styleUrls: ['./covid-countries.component.css'],\r\n})\r\nexport class CovidCountriesComponent implements OnInit {\r\n  data: Observable<CountriesCount>;\r\n  storedCountryData: Observable<CountriesCount>;\r\n  // countries: CountriesCount;\r\n  todayDate: Date;\r\n\r\n  ELEMENT_DATA: CountriesCount[];\r\n  columnNames: string[] = ['country', 'confirmed', 'deaths', 'recovered'];\r\n  dataSource = new MatTableDataSource<CountriesCount>(this.ELEMENT_DATA);\r\n\r\n  constructor(\r\n    private covidDataService: CovidDataService,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getCountryListData();\r\n  }\r\n\r\n  public getCountryListData() {\r\n    this.covidDataService.getCountriesArrayData().subscribe((data) => {\r\n      this.dataSource.data = data as CountriesCount[];\r\n      this.todayDate = this.dataSource.data[0].lastUpdated;\r\n      // console.log('covid-countries data: ', this.dataSource.data);\r\n    });\r\n  }\r\n}\r\n","<head>\r\n  <meta\r\n    name=\"description\"\r\n    content=\"This page shows a list of all countries with Covid-19 data.\"\r\n  />\r\n</head>\r\n\r\n<div class=\"main-container\">\r\n  <!--Top section-->\r\n  <div fxHide.lt-md>\r\n    <div fxFlex fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n      <h2 class=\"main-heading\">\r\n        <mat-icon class=\"page-header-icon\"> today </mat-icon\r\n        ><span class=\"heading-date\">{{ todayDate | date }}</span>\r\n        Covid-19 - Country List\r\n      </h2>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Table of countries-->\r\n  <mat-table #table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 table\">\r\n    <ng-container matColumnDef=\"country\" class=\"mat-column-country\">\r\n      <th class=\"country-cell\" mat-header-cell *matHeaderCellDef>Country</th>\r\n      <td class=\"country-cell\" mat-cell *matCellDef=\"let element\">\r\n        <!--Country name & flag for all countries EXCEPT Diamond Princess (OT)-->\r\n        <div *ngIf=\"element.countryCode !== 'OT'\">\r\n          <img\r\n            *ngIf=\"\r\n              element.country !== 'South Sudan' &&\r\n              element.country !== 'United Arab Emirates' &&\r\n              element.country !== 'Channel Islands' &&\r\n              element.country !== 'Falkland Islands' &&\r\n              element.country !== 'Brunei ' &&\r\n              element.country !== 'Caribbean Netherlands' &&\r\n              element.country !== 'MS Zaandam' &&\r\n              element.country !== 'Saint Pierre Miquelon' &&\r\n              element.country !== 'Central African Republic'\r\n            \"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/{{\r\n              element.countryCode\r\n            }}/flat/24.png\"\r\n            alt=\"flag for {{ element.countryName }}\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'United Arab Emirates'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/AE/flat/24.png\"\r\n            alt=\"flag for United Arab Emerates\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'South Sudan'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/SS/flat/24.png\"\r\n            alt=\"flag for South Sudan\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'Channel Islands'\"\r\n            class=\"country-flag-jersey\"\r\n            src=\"../../../../assets/jersey_flag.png\"\r\n            alt=\"flag for the Channel Islands\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'Falkland Islands'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/FK/flat/24.png\"\r\n            alt=\"flag for the Channel Islands\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'Brunei '\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/BN/flat/24.png\"\r\n            alt=\"flag for Brunei\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'Caribbean Netherlands'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/AN/flat/24.png\"\r\n            alt=\"flag for Netherlands Antilles\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'MS Zaandam'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/NL/flat/24.png\"\r\n            alt=\"flag for MS Zaandam\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'Saint Pierre Miquelon'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/PM/flat/24.png\"\r\n            alt=\"flag for Saint Pierre And Miquelon\"\r\n          />\r\n          <img\r\n            *ngIf=\"element.country == 'Central African Republic'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/CF/flat/24.png\"\r\n            alt=\"flag for Central African Republic\"\r\n          />\r\n          <span *ngIf=\"element.countryCode == 'CF'\"\r\n            >Central African Republic</span\r\n          >\r\n          <span *ngIf=\"element.countryCode !== 'CF'\">{{\r\n            element.country\r\n          }}</span>\r\n          <!-- {{ element.country }} -->\r\n        </div>\r\n        <!--Country name & flag for just the Diamond Princess (OT)-->\r\n        <div *ngIf=\"element.countryCode == 'OT'\">\r\n          <img\r\n            *ngIf=\"element.country !== 'United Arab Emirates'\"\r\n            class=\"country-flag\"\r\n            src=\"https://www.countryflags.io/GB/flat/24.png\"\r\n            alt=\"flag for Diamond Princess Cruise Ship\"\r\n          />\r\n          Diamond Princess\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"confirmed\" class=\"mat-column-cases\">\r\n      <th class=\"cases-header\" mat-header-cell *matHeaderCellDef>Confirmed</th>\r\n      <div>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{ element.totalConfirmed | number }}\r\n        </td>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"deaths\" class=\"mat-column-cases\">\r\n      <th class=\"cases-header\" mat-header-cell *matHeaderCellDef>Dead</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.totalDeaths | number }}\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"recovered\" class=\"mat-column-cases\">\r\n      <th class=\"cases-header\" mat-header-cell *matHeaderCellDef>Recovered</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.totalRecovered | number }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnNames\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnNames\"></tr>\r\n  </mat-table>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { StorageService } from '../../../services/localstorage.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  todaysDate = new Date();\r\n  totalNewsItems: number;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  isHomeRoute() {\r\n    return this.router.url === '/home';\r\n  }\r\n\r\n  isCountriesRoute() {\r\n    return this.router.url === '/covid-countries';\r\n  }\r\n\r\n  isNewsRoute() {\r\n    this.totalNewsItems = this.storageService.get('newsArrayLength');\r\n    return this.router.url === '/covid-news';\r\n  }\r\n\r\n  isNewsDetailRoute() {\r\n    return this.router.url === '/news-detail';\r\n  }\r\n\r\n  isChartsRoute() {\r\n    return this.router.url === '/charts';\r\n  }\r\n\r\n  isAboutRoute() {\r\n    return this.router.url === '/about';\r\n  }\r\n\r\n  isContactRoute() {\r\n    return this.router.url === '/contact';\r\n  }\r\n\r\n  returnToList() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<div style=\"height: 100vh\">\r\n  <!-- Top Navbar sticks to top of screen -->\r\n  <mat-toolbar color=\"primary\" sticky>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"sidenav.toggle()\"\r\n      fxHide.gt-sm\r\n      aria-label=\"drop-down menu button\"\r\n    >\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n\r\n    <!--show 'Home' in top left nav bar when phone/tablet-sized screen-->\r\n    <div fxHide.lt-md=\"true\">\r\n      <a\r\n        class=\"top-nav-link\"\r\n        routerLink=\"/home\"\r\n        routerLinkActive=\"top-link-active\"\r\n        aria-label=\"home nav button\"\r\n        mat-button\r\n      >\r\n        <h2>Home</h2>\r\n      </a>\r\n    </div>\r\n\r\n    <!--show page title info in nav bar on phone/tablet sized screens-->\r\n    <div fxHide.gt-sm=\"true\">\r\n      <div *ngIf=\"isHomeRoute()\">\r\n        <a\r\n          aria-label=\"home nav link active\"\r\n          [routerLink]=\"['/home']\"\r\n          routerLinkActive=\"top-link-active\"\r\n        >\r\n          <mat-icon class=\"top-nav-icon\">home</mat-icon>Home\r\n        </a>\r\n      </div>\r\n\r\n      <!--page titles that appear in nav-bar in active color only when page is active-->\r\n      <div *ngIf=\"isCountriesRoute()\">\r\n        <a\r\n          aria-label=\"countries nav link active\"\r\n          [routerLink]=\"['/covid-countries']\"\r\n          routerLinkActive=\"top-link-active\"\r\n        >\r\n          <mat-icon class=\"top-nav-icon\">coronavirus</mat-icon>Covid Cases<span\r\n            class=\"top-nav-date\"\r\n          >\r\n            <mat-icon class=\"top-nav-title-icon\">today</mat-icon\r\n            >{{ todaysDate | date }}\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <div *ngIf=\"isNewsRoute()\">\r\n        <a\r\n          aria-label=\"covid news nav link active\"\r\n          [routerLink]=\"['/covid-news']\"\r\n          routerLinkActive=\"top-link-active\"\r\n        >\r\n          <mat-icon class=\"top-nav-icon\">article</mat-icon>Covid News ({{\r\n            totalNewsItems\r\n          }}\r\n          Items)\r\n        </a>\r\n      </div>\r\n      <div *ngIf=\"isNewsDetailRoute()\">\r\n        <a\r\n          aria-label=\"covid news detail nav link active\"\r\n          [routerLink]=\"['/news-detail']\"\r\n          routerLinkActive=\"top-link-active\"\r\n        >\r\n          News Detail<span class=\"top-nav-date\">\r\n            <mat-icon class=\"top-nav-title-icon\" class=\"top-nav-title-icon\"\r\n              >today</mat-icon\r\n            >{{ todaysDate | date }}\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <div *ngIf=\"isChartsRoute()\">\r\n        <a\r\n          aria-label=\"covid charts nav link active\"\r\n          [routerLink]=\"['/charts']\"\r\n          routerLinkActive=\"top-link-active\"\r\n        >\r\n          <mat-icon class=\"top-nav-icon\">analytics</mat-icon>Charts<span\r\n            class=\"top-nav-date\"\r\n          >\r\n            <mat-icon class=\"top-nav-title-icon\" class=\"top-nav-title-icon\"\r\n              >today</mat-icon\r\n            >{{ todaysDate | date }}\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <div *ngIf=\"isAboutRoute()\">\r\n        <a\r\n          aria-label=\"about nav link active\"\r\n          [routerLink]=\"['/about']\"\r\n          routerLinkActive=\"top-link-active\"\r\n        >\r\n          <mat-icon class=\"top-nav-icon\">coronavirus</mat-icon>App/Page\r\n          Descriptions\r\n        </a>\r\n      </div>\r\n      <div *ngIf=\"isContactRoute()\">\r\n        <a\r\n          aria-label=\"contact nav link active\"\r\n          [routerLink]=\"['/contact']\"\r\n          routerLinkActive=\"top-link-active\"\r\n        >\r\n          <mat-icon class=\"top-nav-icon\">contact_mail</mat-icon>Author\r\n          Github/Contact\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <div fxFlex fxLayout fxLayoutAlign=\"end\">\r\n      <div fxShow=\"true\" fxHide.lt-md=\"true\">\r\n        <!-- The following menu items will be hidden on both SM and XS screen sizes -->\r\n        <a\r\n          class=\"top-nav-link\"\r\n          routerLink=\"/covid-countries\"\r\n          routerLinkActive=\"top-link-active\"\r\n          aria-label=\"covid news nav button\"\r\n          mat-button\r\n          >Countries</a\r\n        >\r\n        <a\r\n          class=\"top-nav-link\"\r\n          routerLink=\"/covid-news\"\r\n          routerLinkActive=\"top-link-active\"\r\n          aria-label=\"covid news nav button\"\r\n          mat-button\r\n          >News</a\r\n        >\r\n        <a\r\n          class=\"top-nav-link\"\r\n          routerLink=\"/charts\"\r\n          routerLinkActive=\"top-link-active\"\r\n          aria-label=\"covid charts nav button\"\r\n          mat-button\r\n          >Charts</a\r\n        >\r\n        <a\r\n          class=\"top-nav-link\"\r\n          routerLink=\"/about\"\r\n          routerLinkActive=\"top-link-active\"\r\n          aria-label=\"about nav button\"\r\n          mat-button\r\n          >About</a\r\n        >\r\n        <a\r\n          class=\"top-nav-link\"\r\n          routerLink=\"/contact\"\r\n          routerLinkActive=\"top-link-active\"\r\n          aria-label=\"contact nav button\"\r\n          mat-button\r\n          >Contact</a\r\n        >\r\n        <a\r\n          class=\"top-link-social\"\r\n          href=\"https://www.github.com/andrewjbateman\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          >Github</a\r\n        >\r\n        <a\r\n          class=\"top-link-social\"\r\n          href=\"https://www.linkedin.com/in/andrew-bateman\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          >LinkedIn</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </mat-toolbar>\r\n\r\n  <!--Side navbar-->\r\n  <mat-sidenav-container fxFlexFill class=\"example-container\">\r\n    <mat-sidenav #sidenav fxLayout=\"column\">\r\n      <h2 class=\"side-menu-header\">\r\n        <mat-icon class=\"side-nav-icon\">coronavirus</mat-icon>Covid\r\n      </h2>\r\n      <mat-nav-list>\r\n        <a\r\n          mat-list-item\r\n          class=\"side-nav-link\"\r\n          routerLink=\"/home\"\r\n          routerLinkActive=\"side-link-active\"\r\n          (click)=\"sidenav.toggle()\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">home</mat-icon>Home\r\n        </a>\r\n        <a\r\n          mat-list-item\r\n          class=\"side-nav-link\"\r\n          routerLink=\"/covid-countries\"\r\n          routerLinkActive=\"side-link-active\"\r\n          (click)=\"sidenav.toggle()\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">language</mat-icon>Countries\r\n        </a>\r\n        <a\r\n          mat-list-item\r\n          class=\"side-nav-link\"\r\n          routerLink=\"/covid-news\"\r\n          routerLinkActive=\"side-link-active\"\r\n          (click)=\"sidenav.toggle()\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">article</mat-icon>News\r\n        </a>\r\n        <a\r\n          mat-list-item\r\n          class=\"side-nav-link\"\r\n          routerLink=\"/charts\"\r\n          routerLinkActive=\"side-link-active\"\r\n          (click)=\"sidenav.toggle()\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">analytics</mat-icon>Charts\r\n        </a>\r\n        <hr class=\"horiz-line\" />\r\n        <a\r\n          mat-list-item\r\n          class=\"side-nav-link\"\r\n          routerLink=\"/about\"\r\n          routerLinkActive=\"side-link-active\"\r\n          (click)=\"sidenav.toggle()\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">info</mat-icon>About\r\n        </a>\r\n        <a\r\n          mat-list-item\r\n          class=\"side-nav-link\"\r\n          routerLink=\"/contact\"\r\n          routerLinkActive=\"side-link-active\"\r\n          (click)=\"sidenav.toggle()\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">contact_mail</mat-icon>Contact\r\n        </a>\r\n        <a\r\n          mat-list-item\r\n          class=\"side-link-social\"\r\n          href=\"https://www.github.com/andrewjbateman\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">open_in_new</mat-icon>Github\r\n        </a>\r\n        <a\r\n          mat-list-item\r\n          class=\"side-link-social\"\r\n          href=\"https://www.linkedin.com/in/andrew-bateman\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <mat-icon class=\"side-nav-icon\">open_in_new</mat-icon>LinkedIn\r\n        </a>\r\n        <a mat-list-item (click)=\"sidenav.toggle()\">\r\n          <mat-icon class=\"side-nav-icon\">cancel</mat-icon>Close\r\n        </a>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content fxFlexFill>\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { CovidDataService } from '../../../services/covid-data.service';\r\nimport { LocationService } from '../../../services/location.service';\r\nimport { StorageService } from '../../../services/localstorage.service';\r\nimport { GlobalCount, CountriesCount } from '../../../models/covid';\r\nimport { Location } from '../../../models/location';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userCountry: string;\r\n  userCountryCode: '';\r\n  language = '';\r\n  globalData: GlobalCount;\r\n  userCountryData: CountriesCount;\r\n  worldTotalConfirmed: number;\r\n  worldTotalRecovered: number;\r\n  worldTotalDeaths: number;\r\n  worldTotalConfirmedPerMillion: number;\r\n  worldNewCases: number;\r\n  worldNewDeaths: number;\r\n  userCountryTotalConfirmed: number;\r\n  userCountryTotalRecovered: number;\r\n  userCountryTotalDeaths: number;\r\n  userCountryTotalConfirmedPerMillion: number;\r\n  userCountryNewCases: number;\r\n  userCountryNewDeaths: number;\r\n  dataCreatedDate: string;\r\n\r\n  // chart data setup\r\n  chartDataArray = [];\r\n  worldData: CountriesCount[];\r\n  title = '';\r\n\r\n  // angular-charts setup\r\n  chart = {\r\n    type: 'PieChart',\r\n    // height: 300,\r\n    options: {\r\n      animation: {\r\n        duration: 500,\r\n        easing: 'out',\r\n      },\r\n      is3D: true,\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private dataService: CovidDataService,\r\n    private locationService: LocationService,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  // test(a){\r\n  //   console.log('a.index: ', a.index);\r\n  // }\r\n\r\n  // function to push chart data into an arrays using a forEach loop\r\n  // index of mat-tab-group used in switch case to choose class of data\r\n  getChartData(tab: { index: number; tab?: string }) {\r\n    let tabNumber = tab.index;\r\n    this.chartDataArray = [];\r\n    this.worldData.forEach((cases) => {\r\n      let country: string;\r\n      let value: number;\r\n      const confirmedThreshold = 500000;\r\n      const recoveredThreshold = 400000;\r\n      const deadThreshold = 30000;\r\n\r\n      // Switch case to change between user-selected case class\r\n      switch (tabNumber) {\r\n        case 0:\r\n          if (cases.totalConfirmed > confirmedThreshold) {\r\n            country = cases.country;\r\n            value = cases.totalConfirmed;\r\n          }\r\n          this.title = `Countries with >${confirmedThreshold} confirmed cases`;\r\n          break;\r\n\r\n        case 1:\r\n          if (cases.totalRecovered > recoveredThreshold) {\r\n            country = cases.country;\r\n            value = cases.totalRecovered;\r\n          }\r\n          this.title = `Countries with >${recoveredThreshold} recovered cases`;\r\n          break;\r\n\r\n        case 2:\r\n          if (cases.totalDeaths > deadThreshold) {\r\n            country = cases.country;\r\n            value = cases.totalDeaths;\r\n          }\r\n          this.title = `Countries with >${deadThreshold} deaths`;\r\n          break;\r\n      }\r\n\r\n      if (country && value) {\r\n        this.chartDataArray.push([country, value]);\r\n      }\r\n    });\r\n  }\r\n\r\n  // on initialisation get user location, global & user country total covid figures\r\n  // get covid data for all world countries using data service then\r\n  // store this data in local storage the access it & run function to get chart data\r\n  ngOnInit(): void {\r\n    this.locationService.getLocation().subscribe((data: Location) => {\r\n      this.storageService.set('storedUserCountryData', data);\r\n    });\r\n    this.getGlobalCovidData();\r\n    this.getUserCountryCovidData();\r\n\r\n    this.dataService.getCountriesArrayData().subscribe({\r\n      next: (result) => {\r\n        this.storageService.set('storedCountriesArrayData', result);\r\n        this.worldData = this.storageService.get('storedCountriesArrayData');\r\n        this.getChartData({ index: 0 });\r\n      },\r\n    });\r\n  }\r\n\r\n  getGlobalCovidData(): void {\r\n    this.dataService.getGlobalData().subscribe((data: GlobalCount) => {\r\n      this.storageService.set('storedGlobalCovidData', data);\r\n      this.globalData = this.storageService.get('storedGlobalCovidData');\r\n      this.worldTotalConfirmed = this.globalData.totalConfirmed;\r\n      this.worldTotalDeaths = this.globalData.totalDeaths;\r\n      this.worldTotalRecovered = this.globalData.totalRecovered;\r\n      this.worldTotalConfirmedPerMillion = this.globalData.totalCasesPerMillionPop;\r\n      this.dataCreatedDate = this.globalData.created;\r\n    });\r\n  }\r\n\r\n  getUserCountryCovidData(): void {\r\n    this.dataService\r\n      .getUserCountryData()\r\n      .subscribe((data: CountriesCount[]) => {\r\n        this.storageService.set('storedUserCountryCovidData', data[0]);\r\n        this.userCountryData = this.storageService.get(\r\n          'storedUserCountryCovidData'\r\n        );\r\n        this.userCountry = this.userCountryData.country;\r\n        this.userCountryTotalConfirmed = this.userCountryData.totalConfirmed;\r\n        this.userCountryTotalRecovered = this.userCountryData.totalRecovered;\r\n        this.userCountryTotalDeaths = this.userCountryData.totalDeaths;\r\n        this.userCountryTotalConfirmedPerMillion = this.userCountryData.totalConfirmedPerMillionPopulation;\r\n      });\r\n  }\r\n}\r\n","<head>\r\n  <meta\r\n    name=\"description\"\r\n    content=\"Home page with Coronavirus data. Clicking on a card will show more detail.\"\r\n  />\r\n</head>\r\n\r\n<div class=\"main-container\">\r\n  <!--Heading - only show on tablet or larger screens-->\r\n  <div>\r\n    <div fxFlex fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n      <h2 class=\"page-header\">\r\n        <mat-icon class=\"page-header-icon\">coronavirus</mat-icon>\r\n        Covid-19 - Worldwide Cases\r\n      </h2>\r\n    </div>\r\n  </div>\r\n  <!--Cases info: worldwide & user country-->\r\n  <div class=\"home-card-style\">\r\n    <app-home-card\r\n      [userCountry]=\"userCountry\"\r\n      [worldTotalConfirmed]=\"worldTotalConfirmed\"\r\n      [worldTotalDeaths]=\"worldTotalDeaths\"\r\n      [worldTotalRecovered]=\"worldTotalRecovered\"\r\n      [worldTotalConfirmedPerMillion]=\"worldTotalConfirmedPerMillion\"\r\n      [userCountryTotalConfirmed]=\"userCountryTotalConfirmed\"\r\n      [userCountryTotalRecovered]=\"userCountryTotalRecovered\"\r\n      [userCountryTotalDeaths]=\"userCountryTotalDeaths\"\r\n      [userCountryTotalConfirmedPerMillion]=\"\r\n        userCountryTotalConfirmedPerMillion\r\n      \"\r\n      [dataCreatedDate]=\"dataCreatedDate\"\r\n    >\r\n    </app-home-card>\r\n  </div>\r\n  <!--Tab group of charts-->\r\n  <div class=\"home-tabs-style\">\r\n    <mat-card *ngIf=\"chartDataArray[0]\">\r\n      <mat-tab-group (selectedTabChange)=\"getChartData($event)\">\r\n        <mat-tab label=\"Confirmed\">\r\n          <div class=\"example-large-box mat-elevation-z4\">\r\n            <google-chart\r\n              *ngIf=\"chartDataArray\"\r\n              [type]=\"chart.type\"\r\n              [data]=\"chartDataArray\"\r\n              [options]=\"chart.options\"\r\n              [title]=\"title\"\r\n            ></google-chart>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Dead\">\r\n          <google-chart\r\n            *ngIf=\"chartDataArray\"\r\n            [type]=\"chart.type\"\r\n            [data]=\"chartDataArray\"\r\n            [options]=\"chart.options\"\r\n            [title]=\"title\"\r\n          ></google-chart\r\n        ></mat-tab>\r\n        <mat-tab label=\"Recovered\">\r\n          <google-chart\r\n            *ngIf=\"chartDataArray\"\r\n            [type]=\"chart.type\"\r\n            [data]=\"chartDataArray\"\r\n            [options]=\"chart.options\"\r\n            [title]=\"title\"\r\n          ></google-chart\r\n        ></mat-tab>\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-data-charts';\r\n}\r\n","<div class=\"root-container\">\r\n  <app-nav></app-nav>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-card',\r\n  templateUrl: './home-card.component.html',\r\n  styleUrls: ['./home-card.component.css'],\r\n})\r\nexport class HomeCardComponent implements OnInit {\r\n  // global data inputs\r\n  @Input('worldTotalConfirmed')\r\n  worldTotalConfirmed: number;\r\n  @Input('worldTotalDeaths')\r\n  worldTotalDeaths: number;\r\n  @Input('worldTotalRecovered')\r\n  worldTotalRecovered: number;\r\n  @Input('worldTotalConfirmedPerMillion')\r\n  worldTotalConfirmedPerMillion: number;\r\n  @Input('dataCreatedDate')\r\n  date: string;\r\n\r\n  // user country data inputs\r\n  @Input('userCountry')\r\n  userCountry: string;\r\n  @Input('userCountryTotalConfirmed')\r\n  userCountryTotalConfirmed: number;\r\n  @Input('userCountryTotalDeaths')\r\n  userCountryTotalDeaths: number;\r\n  @Input('userCountryTotalRecovered')\r\n  userCountryTotalRecovered: number;\r\n  @Input('userCountryTotalConfirmedPerMillion')\r\n  userCountryConfirmedPerMillion: number;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSelectCountryList() {\r\n    this.router.navigate([\"/covid-countries\"]);\r\n  }\r\n}\r\n","<mat-card class=\"mat-elevation-z1\">\r\n  <!-- <img src=\"../../../../assets/covid.jpg\" class=\"mat-card-image\" /> -->\r\n  <mat-card-content>\r\n    <table class=\"table-style\">\r\n      <tr>\r\n        <td class=\"card-left-header\">Total Cases</td>\r\n        <td class=\"card-right-header\">World</td>\r\n        <td class=\"card-right-header\">{{ userCountry }}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Confirmed:</td>\r\n        <td class=\"highlight-text blue\">{{ worldTotalConfirmed | number }}</td>\r\n        <td class=\"highlight-text blue\">\r\n          {{ userCountryTotalConfirmed | number }}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>Deaths:</td>\r\n        <td class=\"highlight-text red\">{{ worldTotalDeaths | number }}</td>\r\n        <td class=\"highlight-text red\">\r\n          {{ userCountryTotalDeaths | number }}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>Recovered:</td>\r\n        <td class=\"highlight-text green\">{{ worldTotalRecovered | number }}</td>\r\n        <td class=\"highlight-text green\">\r\n          {{ userCountryTotalRecovered | number }}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>Confirmed/million:</td>\r\n        <td class=\"highlight-text blue\">\r\n          {{ worldTotalConfirmedPerMillion | number }}\r\n        </td>\r\n        <td class=\"highlight-text blue\">\r\n          {{ userCountryConfirmedPerMillion | number }}\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </mat-card-content>\r\n  <p>\r\n    <span>\r\n      <p class=\"card-footer-text\">\r\n        <mat-icon color=\"accent\">calendar_today</mat-icon>\r\n        {{ date | date }}\r\n      </p>\r\n      <div fxFlex></div>\r\n      <div fxFlex></div>\r\n      <a\r\n        class=\"card-footer-text\"\r\n        href=\"https://coronavirus.jhu.edu/\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        aria-label=\"link to Johns Hopkins coronavirus resource center\"\r\n      >\r\n        <mat-icon color=\"accent\">link</mat-icon> J.Hopkins\r\n      </a>\r\n    </span>\r\n  </p>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PAGES } from './pages';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css'],\r\n})\r\nexport class AboutComponent {\r\n  pages = PAGES;\r\n\r\n  constructor() {}\r\n}\r\n","<head>\r\n  <meta name=\"description\" content=\"Shows details of app\" />\r\n</head>\r\n\r\n<div class=\"main-container\">\r\n  <h2 class=\"page-header\" fxHide.lt-md>\r\n    <mat-icon class=\"page-header-icon\">coronavirus</mat-icon>App/Page\r\n    Descriptions\r\n  </h2>\r\n\r\n  <!--mat-card for each page with data-binding from page.module.ts-->\r\n  <div *ngFor=\"let page of pages\">\r\n    <mat-card class=\"about-card mat-elevation-z4\">\r\n      <mat-card-content>\r\n        <p class=\"page-card-title\">\r\n          <mat-icon class=\"page-card-icon\">{{ page.icon }}</mat-icon>\r\n          {{ page.title }}\r\n        </p>\r\n        <p class=\"page-card-content\">{{ page.content }}</p>\r\n        <p *ngIf=\"page.website1.length > 0\">\r\n          <span class=\"small-text\">\r\n            Links:\r\n            <div fxFlex></div>\r\n            <a href=\"{{ page.link1 }}\" target=\"_blank\" rel=\"noopener\">\r\n              {{ page.website1 }}\r\n            </a>\r\n            <div fxFlex></div>\r\n            <a\r\n              *ngIf=\"page.website2 && page.website2.length > 0\"\r\n              href=\"{{ page.link2 }}\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n            >\r\n              {{ page.website2 }}\r\n            </a>\r\n            <div fxFlex></div>\r\n          </span>\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { StorageService } from './services/localstorage.service';\r\n\r\nimport { NavComponent } from './modules/common/nav/nav.component';\r\nimport { SharedModule } from './modules/common/shared/shared.module';\r\nimport { HomeComponent } from './modules/common/home/home.component';\r\nimport { ContactComponent } from './modules/common/contact/contact.component';\r\nimport { AboutComponent } from './modules/common/about/about.component';\r\nimport { PageNotFoundComponent } from './modules/common/pagenotfound/pagenotfound.component';\r\nimport { HomeCardComponent } from './modules/common/home/home-card/home-card.component';\r\nimport { CovidCountriesComponent } from './modules/application/covid-countries/covid-countries.component';\r\nimport { PipesModule } from './pipes/pipes.module';\r\nimport { CovidNewsComponent } from './modules/application/covid-news/covid-news.component';\r\nimport { NewsDetailComponent } from './modules/application/covid-news/news-detail/news-detail.component';\r\nimport { ChartsComponent } from './modules/application/charts/charts.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    ContactComponent,\r\n    AboutComponent,\r\n    PageNotFoundComponent,\r\n    HomeCardComponent,\r\n    CovidCountriesComponent,\r\n    CovidNewsComponent,\r\n    NewsDetailComponent,\r\n    ChartsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    GoogleChartsModule,\r\n    SharedModule,\r\n    PipesModule\r\n  ],\r\n  providers: [StorageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagenotfound',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main-div\">\r\n  <mat-card class=\"notFound-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <mat-icon color=\"accent\">error</mat-icon>404: page not found\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-nav-list>\r\n        <a mat-flat-button class=\"nav-link\" routerLink=\"/home\" color=\"primary\" aria-label=\"Navigate to home button\">\r\n          <mat-icon>home</mat-icon>Go Home\r\n        </a>\r\n      </mat-nav-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { throwError, Observable } from \"rxjs\";\nimport { map, catchError, tap } from \"rxjs/operators\";\n\nimport { User } from \"../models/user\";\nimport { environment } from \"src/environments/environment\";\n\nconst baseUrl = \"https://api.github.com/users/\";\n// const params = new HttpParams().set(\"api_key\", environment.GITHUB_KEY);\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GithubService {\n  constructor(private http: HttpClient) {}\n\n  getUser(user: string): Observable<User> {\n    const userSearchUrl = `${baseUrl + user}`;\n    return this.http\n      // .get<User>(userSearchUrl, { params })\n      .get<User>(userSearchUrl)\n      .pipe(\n        // tap((data: User) => console.log('user data', data)),\n        map((data: User) => data),\n        catchError((err) => {\n          return throwError(\n            \"There was a problem fetching data from Github API, error: \",\n            err\n          );\n        })\n      );\n  }\n\n  // getRepos(user: string): Observable<Repo> {\n  //   const repoSearchUrl = `${\n  //     baseUrl + user + \"/repos?order=updated&sort=desc?per_page=100&page=1\"\n  //   }`;\n\n  //   return this.http\n  //     .get<Repo>(repoSearchUrl, { params })\n  //     .pipe(\n  //       map((obj) => obj),\n  //       catchError((err) => {\n  //         return throwError(\n  //           \"There was a problem fetching data from Github API, error: \",\n  //           err\n  //         );\n  //       })\n  //     );\n  // }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { DateConvertPipe } from \"./date-convert.pipe\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [DateConvertPipe],\r\n  exports: [DateConvertPipe],\r\n})\r\nexport class PipesModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { CovidDataService } from '../../../services/covid-data.service';\r\nimport { CountriesCount } from '../../../models/covid';\r\nimport { StorageService } from '../../../services/localstorage.service';\r\n\r\n@Component({\r\n  selector: 'app-charts',\r\n  templateUrl: './charts.component.html',\r\n  styleUrls: ['./charts.component.css'],\r\n})\r\nexport class ChartsComponent implements OnInit {\r\n  // radio button chart data class setup\r\n  caseClasses: string[] = ['Confirmed', 'Recovered', 'Dead'];\r\n  caseClass: string;\r\n  selectedClass = 'Confirmed';\r\n\r\n  // chart data setup\r\n  chartDataArray = [];\r\n  worldData: CountriesCount[];\r\n  columnChartTitle = '';\r\n  barChartTitle = '';\r\n  columnNames = ['Country', 'Cases'];\r\n\r\n  // angular-charts setup\r\n  chart = {\r\n    PieChart: 'PieChart',\r\n    ColumnChart: 'ColumnChart',\r\n    BarChart: 'BarChart',\r\n    height: 400,\r\n    width: 800,\r\n    options: {\r\n      animation: {\r\n        duration: 500,\r\n        easing: 'out',\r\n      },\r\n      is3D: true,\r\n    },\r\n  };\r\n\r\n  countries: CountriesCount[];\r\n  constructor(\r\n    private dataService: CovidDataService,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  getChartData(caseClass: string) {\r\n    this.chartDataArray = [];\r\n    this.worldData.forEach((cases) => {\r\n      let country: string;\r\n      let value: number;\r\n      const confirmedThreshold = 500000;\r\n      const recoveredThreshold = 400000;\r\n      const deadThreshold = 30000;\r\n      const thresholdNumberToString = (number: number) => {\r\n        return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n      };\r\n      const confirmedThresholdString = thresholdNumberToString(\r\n        confirmedThreshold\r\n      );\r\n      const recoveredThresholdString = thresholdNumberToString(\r\n        recoveredThreshold\r\n      );\r\n      const deadThresholdString = thresholdNumberToString(deadThreshold);\r\n\r\n      // Switch case to change between user-selected case class\r\n      switch (caseClass) {\r\n        case 'Confirmed':\r\n          if (cases.totalConfirmed > confirmedThreshold) {\r\n            country = cases.country;\r\n            value = cases.totalConfirmed;\r\n          }\r\n          this.columnChartTitle = `${this.chart.ColumnChart} of countries with > ${confirmedThresholdString} ${caseClass} cases`;\r\n          this.barChartTitle = `${this.chart.BarChart} of countries with > ${confirmedThresholdString} ${caseClass} cases`;\r\n          break;\r\n\r\n        case 'Recovered':\r\n          if (cases.totalRecovered > recoveredThreshold) {\r\n            country = cases.country;\r\n            value = cases.totalRecovered;\r\n          }\r\n          this.columnChartTitle = `${this.chart.ColumnChart} of countries with > ${recoveredThresholdString} ${caseClass}`;\r\n          this.barChartTitle = `${this.chart.BarChart} of countries with > ${recoveredThresholdString} ${caseClass}`;\r\n          break;\r\n\r\n        case 'Dead':\r\n          if (cases.totalDeaths > deadThreshold) {\r\n            country = cases.country;\r\n            value = cases.totalDeaths;\r\n          }\r\n          this.columnChartTitle = `${this.chart.ColumnChart} of countries with > ${deadThresholdString} ${caseClass}`;\r\n          this.barChartTitle = `${this.chart.BarChart} of countries with > ${deadThresholdString} ${caseClass}`;\r\n          break;\r\n      }\r\n\r\n      if (country && value) {\r\n        this.chartDataArray.push([country, value]);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.getCountriesArrayData().subscribe({\r\n      next: (result) => {\r\n        this.storageService.set('storedCountriesArrayData', result);\r\n        this.worldData = this.storageService.get('storedCountriesArrayData');\r\n        this.getChartData('Confirmed');\r\n      },\r\n    });\r\n  }\r\n}\r\n","<head>\r\n  <meta\r\n    name=\"description\"\r\n    content=\"This page shows a charts of all countries with Covid-19 data.\"\r\n  />\r\n</head>\r\n\r\n<div class=\"main-container\">\r\n  <div class=\"top-section\">\r\n    <h2 class=\"main-heading\" fxHide.lt-md>\r\n      <mat-icon class=\"page-header-icon\">analytics</mat-icon>Google Charts Covid\r\n      Data\r\n    </h2>\r\n\r\n    <h4 class=\"main-heading\" id=\"cases-radio-group-label\">\r\n      <mat-icon class=\"page-header-icon\">touch_app</mat-icon>\r\n      <mat-radio-group\r\n        aria-labelledby=\"cases-radio-group-label\"\r\n        class=\"cases-radio-group\"\r\n        [(ngModel)]=\"selectedClass\"\r\n      >\r\n        <mat-radio-button\r\n          class=\"cases-radio-button\"\r\n          *ngFor=\"let caseClass of caseClasses\"\r\n          [value]=\"caseClass\"\r\n          (click)=\"getChartData(caseClass)\"\r\n          aria-label=\"radio button select coronavirus type {{ caseClass }}\"\r\n        >\r\n          {{ caseClass }}\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </h4>\r\n  </div>\r\n\r\n  <!--Bottom Chart section-->\r\n  <div\r\n    *ngIf=\"chartDataArray[0]\"\r\n    class=\"chart-container\"\r\n    fxLayout\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutAlign=\"center\"\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"0\"\r\n  >\r\n    <!--Pie chart lhs-->\r\n    <div fxFlex=\"50%\">\r\n      <google-chart\r\n        [type]=\"chart.BarChart\"\r\n        [data]=\"chartDataArray\"\r\n        [options]=\"chart.options\"\r\n        [columns]=\"columnNames\"\r\n        [title]=\"columnChartTitle\"\r\n        [height]=\"chart.height\"\r\n      ></google-chart>\r\n    </div>\r\n\r\n    <!--Column chart lhs-->\r\n    <div fxFlex=\"50%\" fxFlexOrder=\"2\">\r\n      <google-chart\r\n        [type]=\"chart.PieChart\"\r\n        [data]=\"chartDataArray\"\r\n        [options]=\"chart.options\"\r\n        [title]=\"barChartTitle\"\r\n        [height]=\"chart.height\"\r\n      ></google-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\n\r\nimport { NewsItem } from '../../../../models/covid';\r\n\r\n@Component({\r\n  selector: 'app-news-detail',\r\n  templateUrl: './news-detail.component.html',\r\n  styleUrls: ['./news-detail.component.css'],\r\n})\r\nexport class NewsDetailComponent implements OnInit {\r\n  newsItem: NewsItem;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router, private location: Location) {\r\n    this.activatedRoute.queryParams.subscribe((params) => {\r\n      if (this.router.getCurrentNavigation().extras.state) {\r\n        this.newsItem = this.router.getCurrentNavigation().extras.state.item;\r\n        // console.log('this.newsItem', this.newsItem);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onReturnToList() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<ng-container>\r\n  <mat-card class=\"mat-elevation-z1\">\r\n    <img\r\n      mat-card-image\r\n      [src]=\"newsItem.urlToImage\"\r\n      alt=\"image for news item {{ newsItem.title }}\"\r\n    />\r\n\r\n    <mat-card-content>\r\n      <p class=\"title-style\">{{ newsItem.title }}</p>\r\n      <p class=\"content-style\">{{ newsItem.content }}</p>\r\n      <span>\r\n        <a\r\n        mat-raised-button\r\n          (click)=\"onReturnToList()\"\r\n          aria-label=\"button to return to list of news items\"\r\n        >\r\n          <mat-icon color=\"accent\">arrow_back</mat-icon>\r\n        </a>\r\n        <div fxFlex></div>\r\n        <div class=\"credit-date-text\">\r\n          <a href=\"{{ newsItem.url }}\" target=\"_blank\" rel=\"noreferrer\">\r\n            <mat-icon color=\"accent\">copyright</mat-icon>{{ newsItem.siteName }}\r\n          </a>\r\n        </div>\r\n      </span>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</ng-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { StorageService } from '../services/localstorage.service';\r\nimport { GlobalCount, CountriesCount, NewsItems } from '../models/covid';\r\nimport { Location } from '../models/location';\r\n\r\nconst apiBaseUrl = 'https://api.coronatracker.com/v3/stats/worldometer/';\r\nconst apiNewsBaseUrl = 'https://api.coronatracker.com/news/trending';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CovidDataService {\r\n  storedCountryData: CountriesCount[];\r\n  userCountryData: Location;\r\n  userCountryCode: string;\r\n  userCountry: '';\r\n  newsArrayLength: number;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  getGlobalData(): Observable<GlobalCount> {\r\n    return this.http.get<GlobalCount>(apiBaseUrl + 'global').pipe(\r\n      // tap((data: GlobalCount) => console.log('data', data)),\r\n      map((data: GlobalCount) => data),\r\n      catchError((err) => {\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n\r\n  getUserCountryData(): Observable<CountriesCount[]> {\r\n    this.userCountryData = this.storageService.get('storedUserCountryData');\r\n    this.userCountryCode = this.userCountryData.country_code;\r\n    if (this.userCountryCode) {\r\n      return this.http\r\n        .get<CountriesCount[]>(\r\n          apiBaseUrl + 'country?countryCode=' + this.userCountryCode\r\n        )\r\n        .pipe(\r\n          // tap((data: CountriesCount[]) => console.log('userCountry data', data)),\r\n          map((data: CountriesCount[]) => data),\r\n          catchError((err) => {\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  getCountriesArrayData(): Observable<CountriesCount[]> {\r\n    return this.http.get<CountriesCount[]>(apiBaseUrl + 'country').pipe(\r\n      // tap((data: CountriesCount[]) => console.log('countries data', data)),\r\n      map((data: CountriesCount[]) => data),\r\n      catchError((err) => {\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n\r\n  // create news API observable\r\n  getCovidNews(): Observable<NewsItems> {\r\n    this.newsArrayLength = 20;\r\n    this.storageService.set('newsArrayLength', this.newsArrayLength);\r\n    this.userCountry = this.storageService.get(\r\n      'storedUserCountryData'\r\n    ).country_name;\r\n    return this.http\r\n      .get<NewsItems>(\r\n        apiNewsBaseUrl +\r\n          `?limit=${this.newsArrayLength}&offset&country=${this.userCountry}`\r\n      )\r\n      .pipe(\r\n        // tap((data: NewsItems) => console.log('news data', data)),\r\n        map((data: NewsItems) => data),\r\n        catchError((err) => {\r\n          return throwError(err);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './modules/common/home/home.component';\r\nimport { AboutComponent } from './modules/common/about/about.component';\r\nimport { ContactComponent } from './modules/common/contact/contact.component';\r\nimport { PageNotFoundComponent } from './modules/common/pagenotfound/pagenotfound.component';\r\nimport { CovidCountriesComponent } from './modules/application/covid-countries/covid-countries.component';\r\nimport { CovidNewsComponent } from './modules/application/covid-news/covid-news.component';\r\nimport { NewsDetailComponent } from './modules/application/covid-news/news-detail/news-detail.component';\r\nimport { ChartsComponent } from './modules/application/charts/charts.component';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tredirectTo: '/home',\r\n\t\tpathMatch: 'full'\r\n\t},\r\n\t{\r\n\t\tpath: 'home',\r\n\t\tcomponent: HomeComponent\r\n  },\r\n\t{\r\n\t\tpath: 'about',\r\n    component: AboutComponent\r\n  },\r\n  {\r\n    path: 'contact',\r\n    component: ContactComponent\r\n  },\r\n  {\r\n    path: 'covid-countries',\r\n    component: CovidCountriesComponent\r\n  },\r\n  {\r\n    path: 'covid-news',\r\n    component: CovidNewsComponent\r\n  },\r\n  {\r\n    path: 'news-detail',\r\n    component: NewsDetailComponent\r\n  },\r\n  {\r\n    path: 'charts',\r\n    component: ChartsComponent\r\n  },\r\n\t{\r\n\t\tpath: '**',\r\n\t\tredirectTo: '/404',\r\n\t\tpathMatch: 'full'\r\n\t},\r\n\t{\r\n\t\tpath: '404',\r\n\t\tcomponent: PageNotFoundComponent\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\n@NgModule({\r\n  exports: [\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { Location } from '../models/location';\r\n\r\nconst apiUrl = 'https://ipapi.co/json/';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LocationService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLocation(): Observable<Location> {\r\n    return this.http.get<Location>(apiUrl).pipe(\r\n      // tap((data: Location) => console.log('data: ', data.country_name)),\r\n      map((data: Location) => data),\r\n      catchError((err) => {\r\n        return throwError('Location data not found, error: ', err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}